[
  {
    "name": "source.java",
    "path": "source.java",
    "content": {
      "structured": {
        "description": "Several classes and interfaces, demonstrating various aspects of functional programming in Java. The `Lambda` class provides a platform for demonstrating lambda expressions, including a `Runnable` that prints a message, a `BinaryOperation` interface that calculates an integer result from two input integers, and a `Predicate` and `Consumer` that perform more advanced operations on input data. Additionally, the `List` class is used to store and manipulate lists of strings. Overall, the code showcases the versatility and expressiveness of functional programming in Java.",
        "items": [
          {
            "id": "7f028382-7a29-aba3-584b-fac9918914bc",
            "ancestors": [],
            "description": "Defines several methods and interfaces, including a `Runnable` for printing a message, a `BinaryOperation` interface for calculating an integer result, and a `List` of strings that can be iterated over using various predicates and consumers.",
            "name": "Lambda",
            "location": {
              "start": 5,
              "insert": 5,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 32,
            "docLength": null
          },
          {
            "id": "86cac59c-e61e-2e97-8a43-43349f0404ef",
            "ancestors": [
              "7f028382-7a29-aba3-584b-fac9918914bc"
            ],
            "description": "Demonstrates various features of Java programming, including lambdas, methods reference, and stream processing. A lambda expression prints \"Hello, Lambda!\", while a method reference adds two numbers and calculates its result. The `names` list is processed using the `forEach()` method and `filter()` method to print names starting with \"A\" in uppercase.",
            "params": [
              {
                "name": "args",
                "type_name": "String[]",
                "description": "0 or more command-line arguments passed to the `main` method when the program is launched directly from the command line, and it is ignored in this case.\n\n* Length: `args.length` returns the number of elements in the array.\n* Elements: Each element in the array is a string, representing a command-line argument.",
                "complex_type": true
              }
            ],
            "name": "main",
            "location": {
              "start": 6,
              "insert": 6,
              "offset": " ",
              "indent": 4,
              "comment": null
            },
            "item_type": "method",
            "length": 22,
            "docLength": null
          },
          {
            "id": "b1c57dc4-800c-5596-254e-99dcdfd1336e",
            "ancestors": [
              "7f028382-7a29-aba3-584b-fac9918914bc"
            ],
            "description": "Defines a single method, calculate(int, int), to return an integer result for two input integers.",
            "name": "BinaryOperation",
            "location": {
              "start": 33,
              "insert": 29,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 28,
                "end": 32
              }
            },
            "item_type": "interface",
            "length": 3,
            "docLength": 4
          }
        ]
      }
    }
  }
]
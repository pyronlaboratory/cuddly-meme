[
  {
    "name": "source.java",
    "path": "source.java",
    "content": {
      "structured": {
        "description": "Several functional programming concepts and demonstrates their usage through various lambda expressions. These include a `Runnable` that prints a message, a `BinaryOperation` that calculates the sum of two integers, a `List` of strings processed using different interfaces, and a `Consumer` that converts strings to uppercase. The code showcases the concise and flexible nature of lambda expressions in Java.",
        "items": [
          {
            "id": "c954363f-a38a-d4a8-a64c-6931b22cc577",
            "ancestors": [],
            "description": "Demonstrates various functional programming concepts using lambdas, higher-order functions, and stream processing. The class includes a `Runnable` that prints a message, a binary operation that calculates the sum of two integers, and a list of strings processed using various functional interfaces. These lambda expressions allow for concise and flexible code execution.",
            "name": "LambdaDemo",
            "location": {
              "start": 14,
              "insert": 6,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 5,
                "end": 13
              }
            },
            "item_type": "class",
            "length": 49,
            "docLength": 8
          },
          {
            "id": "d161e725-25bb-eaab-5f40-aeb670483944",
            "ancestors": [
              "c954363f-a38a-d4a8-a64c-6931b22cc577"
            ],
            "description": "Demonstrates various aspects of Java programming: lambdas for functional programming, method references for inline functions, list and stream APIs for handling collections, and Predicate and Consumer interfaces for filtering and transforming data.",
            "params": [
              {
                "name": "args",
                "type_name": "String[]",
                "description": "program's command-line arguments, which are passed to the `main()` method by the Java runtime environment when the program is launched from the command line.\n\n* `args` is an array of strings containing command-line arguments.\n* Its main property is that it contains multiple strings as its elements.",
                "complex_type": true
              }
            ],
            "name": "main",
            "location": {
              "start": 32,
              "insert": 16,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 15,
                "end": 31
              }
            },
            "item_type": "method",
            "length": 22,
            "docLength": 16
          },
          {
            "id": "5cc8ddae-553f-06b6-c844-0ee59846bc28",
            "ancestors": [
              "c954363f-a38a-d4a8-a64c-6931b22cc577"
            ],
            "description": "Defines a method to calculate an integer result for two input integers.",
            "name": "BinaryOperation",
            "location": {
              "start": 59,
              "insert": 55,
              "offset": " ",
              "indent": 4,
              "comment": {
                "start": 54,
                "end": 58
              }
            },
            "item_type": "interface",
            "length": 3,
            "docLength": 4
          }
        ]
      }
    }
  }
]